// <auto-generated />
using System;
using DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210624124917_SHOP2")]
    partial class SHOP2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL.Models.SQLCustomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("middle_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("DAL.Models.SQLOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int>("ToyID")
                        .HasColumnType("int");

                    b.Property<int?>("UsersId")
                        .HasColumnType("int");

                    b.Property<DateTime>("order_date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerID");

                    b.HasIndex("ToyID");

                    b.HasIndex("UsersId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("DAL.Models.SQLTOYDet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("TOYDet");
                });

            modelBuilder.Entity("DAL.Models.SQLToy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VendorID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Toy");
                });

            modelBuilder.Entity("DAL.Models.SQLVENDORDet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Individ_or_legal_entity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VENDORDet");
                });

            modelBuilder.Entity("DAL.Models.SQLVendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ToyID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Vendor");
                });

            modelBuilder.Entity("DAL.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SQLTOYDetSQLToy", b =>
                {
                    b.Property<int>("SQLTOYDetId")
                        .HasColumnType("int");

                    b.Property<int>("SQLToyId")
                        .HasColumnType("int");

                    b.HasKey("SQLTOYDetId", "SQLToyId");

                    b.HasIndex("SQLToyId");

                    b.ToTable("SQLTOYDetSQLToy");
                });

            modelBuilder.Entity("SQLVENDORDetSQLVendor", b =>
                {
                    b.Property<int>("SQLVENDORDetId")
                        .HasColumnType("int");

                    b.Property<int>("SQLVendorId")
                        .HasColumnType("int");

                    b.HasKey("SQLVENDORDetId", "SQLVendorId");

                    b.HasIndex("SQLVendorId");

                    b.ToTable("SQLVENDORDetSQLVendor");
                });

            modelBuilder.Entity("DAL.Models.SQLOrder", b =>
                {
                    b.HasOne("DAL.Models.SQLCustomer", "SQLCustomer")
                        .WithMany("SQLOrder")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.SQLToy", "SQLToy")
                        .WithMany("SQLOrder")
                        .HasForeignKey("ToyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Users", "Users")
                        .WithMany("SQLOrder")
                        .HasForeignKey("UsersId");

                    b.Navigation("SQLCustomer");

                    b.Navigation("SQLToy");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("SQLTOYDetSQLToy", b =>
                {
                    b.HasOne("DAL.Models.SQLTOYDet", null)
                        .WithMany()
                        .HasForeignKey("SQLTOYDetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.SQLToy", null)
                        .WithMany()
                        .HasForeignKey("SQLToyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SQLVENDORDetSQLVendor", b =>
                {
                    b.HasOne("DAL.Models.SQLVENDORDet", null)
                        .WithMany()
                        .HasForeignKey("SQLVENDORDetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.SQLVendor", null)
                        .WithMany()
                        .HasForeignKey("SQLVendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Models.SQLCustomer", b =>
                {
                    b.Navigation("SQLOrder");
                });

            modelBuilder.Entity("DAL.Models.SQLToy", b =>
                {
                    b.Navigation("SQLOrder");
                });

            modelBuilder.Entity("DAL.Models.Users", b =>
                {
                    b.Navigation("SQLOrder");
                });
#pragma warning restore 612, 618
        }
    }
}
